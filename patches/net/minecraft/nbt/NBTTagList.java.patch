--- ../src-base/minecraft/net/minecraft/nbt/NBTTagList.java
+++ ../src-work/minecraft/net/minecraft/nbt/NBTTagList.java
@@ -1,5 +1,7 @@
 package net.minecraft.nbt;
 
+import io.github.crucible.nbt.ICrucibleString;
+
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
@@ -7,9 +9,9 @@
 import java.util.Iterator;
 import java.util.List;
 
-public class NBTTagList extends NBTBase
+public class NBTTagList extends NBTBase implements ICrucibleString
 {
-    private List tagList = new ArrayList();
+    private List<NBTBase> tagList = new ArrayList<NBTBase>();
     private byte tagType = 0;
     private static final String __OBFID = "CL_00001224";
 
@@ -192,11 +194,11 @@
     {
         NBTTagList nbttaglist = new NBTTagList();
         nbttaglist.tagType = this.tagType;
-        Iterator iterator = this.tagList.iterator();
-
-        while (iterator.hasNext())
+        if ( nbttaglist.tagList instanceof ArrayList ) // Thermos, ensure we dont create arrays to then delete them
+        	((ArrayList<NBTBase>)nbttaglist.tagList).ensureCapacity(this.tagList.size());
+        
+        for(NBTBase nbtbase : this.tagList)
         {
-            NBTBase nbtbase = (NBTBase)iterator.next();
             NBTBase nbtbase1 = nbtbase.copy();
             nbttaglist.tagList.add(nbtbase1);
         }
@@ -228,4 +230,21 @@
     {
         return this.tagType;
     }
+
+    @Override
+    public String crucible_toString() {
+        StringBuilder stringbuilder = new StringBuilder("[");
+
+        for (int i = 0; i < this.tagList.size(); ++i)
+        {
+            if (i != 0)
+            {
+                stringbuilder.append(',');
+            }
+
+            stringbuilder.append(((ICrucibleString)this.tagList.get(i)).crucible_toString());
+        }
+
+        return stringbuilder.append(']').toString();
+    }
 }
