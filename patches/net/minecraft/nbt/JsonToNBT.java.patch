--- ../src-base/minecraft/net/minecraft/nbt/JsonToNBT.java
+++ ../src-work/minecraft/net/minecraft/nbt/JsonToNBT.java
@@ -13,27 +13,42 @@
 
     public static NBTBase func_150315_a(String p_150315_0_) throws NBTException
     {
-        p_150315_0_ = p_150315_0_.trim();
-        int i = func_150310_b(p_150315_0_);
-
-        if (i != 1)
-        {
-            throw new NBTException("Encountered multiple top tags, only one expected");
+        NBTException storedExpection;
+        if (true){
+            try {
+                return io.github.crucible.nbt.Crucible_JsonToNBT.getTagFromJson(p_150315_0_);
+            }catch (NBTException toBeStored){
+                storedExpection = toBeStored;
+                //The Code bellow is Wrong, but it was wrong for too much time, many people might have used this wrong system.
+                //If the right one fails, let the wrong one give a try! Better than nothing :/
+                //But we need to store the NBTException of the right one, because if the second fails as well, we might only throw the right one
+            }
         }
-        else
-        {
-            JsonToNBT.Any any = null;
+        try {
+            p_150315_0_ = p_150315_0_.trim();
+            int i = func_150310_b(p_150315_0_);
 
-            if (p_150315_0_.startsWith("{"))
+            if (i != 1)
             {
-                any = func_150316_a("tag", p_150315_0_);
+                throw new NBTException("Encountered multiple top tags, only one expected");
             }
             else
             {
-                any = func_150316_a(func_150313_b(p_150315_0_, false), func_150311_c(p_150315_0_, false));
-            }
+                JsonToNBT.Any any = null;
 
-            return any.func_150489_a();
+                if (p_150315_0_.startsWith("{"))
+                {
+                    any = func_150316_a("tag", p_150315_0_);
+                }
+                else
+                {
+                    any = func_150316_a(func_150313_b(p_150315_0_, false), func_150311_c(p_150315_0_, false));
+                }
+
+                return any.func_150489_a();
+            }
+        }catch (NBTException ignored){
+            throw storedExpection;
         }
     }
 
